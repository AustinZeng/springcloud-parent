<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!--定义日志存放的位置 -->
	<springProperty scope="context" name="logPath" source="log.path" defaultValue="trade-logs" />
	<!--定义app的名称，决定日志文件名称-->
	<property name="APP_NAME" value="trade"/>

	<!-- ********************** 放到服务器上不管在什么环境都只在文件记录日志 **************************** -->
	<appender name="STDOUT"
		class="ch.qos.logback.core.ConsoleAppender">
		<!--encoder 默认配置为PatternLayoutEncoder -->
		<encoder>
			<pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger.%method Line:%-3L -%msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>
	<!-- 日志记录器，日期滚动记录 -->
	<appender name="FILE_ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${logPath}/${APP_NAME}_error.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。 
				而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${logPath}/error/log-error-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始， 命名日志文件，例如log-error-2013-12-21.0.log -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>2MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger.%method Line:%-3L -%msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>error</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 日志记录器，日期滚动记录 -->
	<appender name="FILE_ALL"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${logPath}/${APP_NAME}.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。 
				而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${logPath}/total/${APP_NAME}-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 除按日志记录之外，还配置了日志文件不能超过10M，若超过10M，日志文件会以索引0开始， 命名日志文件，例如log-error-2013-12-21.0.log -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger.%method Line:%-3L -%msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>
	
	<!--异步记录日志 -->
	 <appender name="ASYNC-FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <appender-ref ref="FILE_ALL" />
    </appender>

    <!-- 日志记录器，日期滚动记录 -->
    <appender name="SLOW_SQL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logPath}/slowsql/${APP_NAME}-slowsql.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${logPath}/${APP_NAME}-slowsql.log.%i.zip</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>12</MaxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger.%method Line:%-3L -%msg%n</pattern>
        </encoder>
    </appender>
    
     <root level="info">
			<appender-ref ref="FILE_ERROR" />
			<appender-ref ref="ASYNC-FILE" />
		    <appender-ref ref="STDOUT" />
		    <appender-ref ref="SLOW_SQL_FILE" />
	 </root>

     
     
	<!-- <springProfile name="local,dev">
	    <root level="info">
			<appender-ref ref="FILE_ERROR" />
			<appender-ref ref="ASYNC-FILE" />
			<appender-ref ref="STDOUT" />
		</root>
	</springProfile>
	
	<springProfile name="test">
	    <root level="info">
			<appender-ref ref="FILE_ERROR" />
			<appender-ref ref="ASYNC-FILE" />
		</root>
	</springProfile>
	
	<springProfile name="produce">
	    <root level="info">
			<appender-ref ref="FILE_ERROR" />
			<appender-ref ref="ASYNC-FILE" />
		</root>
	</springProfile> -->
	
<!--	<logger name="com.springcloud.mapper" additivity="true" level="DEBUG" />-->


</configuration>


